<?php
// T·∫Øt t·∫•t c·∫£ c√°c th√¥ng b√°o l·ªói ƒë·ªÉ tr√°nh ·∫£nh h∆∞·ªüng ƒë·∫øn output JSON
error_reporting(0);

// Th√™m CORS headers ƒë·ªÉ cho ph√©p g·ªçi API t·ª´ m·ªçi ngu·ªìn
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type");

// N·∫øu l√† OPTIONS request (preflight), tr·∫£ v·ªÅ 200 v√† d·ª´ng
if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
    http_response_code(200);
    exit();
}

// Kh√¥ng c·∫ßn session_start() v√¨ ƒë√£ ƒë∆∞·ª£c g·ªçi trong chat.php
// header('Content-Type: application/json'); // ƒê√£ ƒë∆∞·ª£c x·ª≠ l√Ω trong chat.php

// Danh s√°ch c√¢u tr·∫£ l·ªùi c·ªë ƒë·ªãnh
$fixed_responses = [
    "nh√† h√†ng m·ªü c·ª≠a m·∫•y gi·ªù" => "Nh√† h√†ng m·ªü c·ª≠a t·ª´ 8:00 - 22:00 m·ªói ng√†y, ph·ª•c v·ª• c·∫£ ng√†y kh√¥ng ngh·ªâ tr∆∞a. üïí",
    "gi·ªù m·ªü c·ª≠a" => "Nh√† h√†ng m·ªü c·ª≠a t·ª´ 8:00 - 22:00 m·ªói ng√†y, ph·ª•c v·ª• c·∫£ ng√†y kh√¥ng ngh·ªâ tr∆∞a. üïí",
    "ƒë·ªãa ch·ªâ" => "Nh√† h√†ng n·∫±m t·∫°i 123 ABC Street, Qu·∫≠n 1, TP.HCM. R·∫•t h√¢n h·∫°nh ƒë∆∞·ª£c ƒë√≥n ti·∫øp qu√Ω kh√°ch! üìç",
    "·ªü ƒë√¢u" => "Nh√† h√†ng n·∫±m t·∫°i 123 ABC Street, Qu·∫≠n 1, TP.HCM. R·∫•t h√¢n h·∫°nh ƒë∆∞·ª£c ƒë√≥n ti·∫øp qu√Ω kh√°ch! üìç",
    "li√™n h·ªá" => "Qu√Ω kh√°ch c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i qua s·ªë ƒëi·ªán tho·∫°i 0123456789 ho·∫∑c email info@restaurant.com. üìû",
    "s·ªë ƒëi·ªán tho·∫°i" => "Qu√Ω kh√°ch c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i qua s·ªë ƒëi·ªán tho·∫°i 0123456789. üìû",
    "email" => "Email li√™n h·ªá c·ªßa nh√† h√†ng l√† info@restaurant.com. üìß",
    "d·ªãch v·ª•" => "Ch√∫ng t√¥i c√≥ d·ªãch v·ª• ƒë·∫∑t ti·ªác, t·ªï ch·ª©c sinh nh·∫≠t, khu v·ª±c ri√™ng cho nh√≥m ƒë√¥ng ng∆∞·ªùi v√† ph·ª•c v·ª• ƒë·∫∑t m√≥n mang v·ªÅ. üíù",
    
    "m√≥n ƒÉn" => "Nh√† h√†ng c√≥ ƒëa d·∫°ng m√≥n ƒÉn t·ª´ khai v·ªã, m√≥n ch√≠nh ƒë·∫øn tr√°ng mi·ªáng. C√°c m√≥n n·ªïi b·∫≠t: V·ªãt quay B·∫Øc Kinh (200,000ƒë), C∆°m chi√™n h·∫£i s·∫£n (100,000ƒë), B√≤ l√∫c l·∫Øc (95,000ƒë). üçΩÔ∏è",
    "m√≥n ngon" => "Nh√† h√†ng c√≥ nhi·ªÅu m√≥n ngon nh∆∞ V·ªãt quay B·∫Øc Kinh (200,000ƒë), C∆°m chi√™n h·∫£i s·∫£n (100,000ƒë), B√≤ l√∫c l·∫Øc (95,000ƒë). üçΩÔ∏è",
    "c√≥ m√≥n n√†o ngon" => "Nh√† h√†ng c√≥ nhi·ªÅu m√≥n ngon nh∆∞ V·ªãt quay B·∫Øc Kinh (200,000ƒë), C∆°m chi√™n h·∫£i s·∫£n (100,000ƒë), B√≤ l√∫c l·∫Øc (95,000ƒë). üçΩÔ∏è",
    "m√≥n ƒë·∫∑c bi·ªát" => "M√≥n ƒë·∫∑c bi·ªát c·ªßa nh√† h√†ng l√† V·ªãt quay B·∫Øc Kinh (200,000ƒë) v√† C√° LƒÉng ƒê·∫∑c S·∫Øc (350,000ƒë). üçΩÔ∏è",
    "m√≥n ph·ªï bi·∫øn" => "C√°c m√≥n ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t t·∫°i nh√† h√†ng g·ªìm C∆°m chi√™n h·∫£i s·∫£n, B√≤ l√∫c l·∫Øc v√† G·ªèi xo√†i t√¥m kh√¥. üçΩÔ∏è",
    "m√≥n ch√≠nh" => "C√°c m√≥n ch√≠nh c·ªßa nh√† h√†ng g·ªìm: V·ªãt quay B·∫Øc Kinh (200,000ƒë), C∆°m chi√™n h·∫£i s·∫£n (100,000ƒë) v√† nhi·ªÅu m√≥n kh√°c. üçΩÔ∏è",
    "khai v·ªã" => "C√°c m√≥n khai v·ªã c·ªßa nh√† h√†ng g·ªìm: G·ªèi xo√†i t√¥m kh√¥ (90,000ƒë), S√∫p h·∫£i s·∫£n (80,000ƒë) v√† nhi·ªÅu m√≥n kh√°c. üçΩÔ∏è",
    "tr√°ng mi·ªáng" => "C√°c m√≥n tr√°ng mi·ªáng c·ªßa nh√† h√†ng g·ªìm: B√°nh flan (15,000ƒë), Kem d√¢u (20,000ƒë), B√°nh l·ªçt l√° d·ª©a (25,000ƒë). üç¶",
    "ƒë·ªì u·ªëng" => "Nh√† h√†ng c√≥ c√°c lo·∫°i n∆∞·ªõc √©p tr√°i c√¢y t∆∞∆°i, sinh t·ªë, tr√†, c√† ph√™ v√† c√°c lo·∫°i bia, r∆∞·ª£u vang. üçπ",
    "n∆∞·ªõc u·ªëng" => "Nh√† h√†ng c√≥ c√°c lo·∫°i n∆∞·ªõc √©p tr√°i c√¢y t∆∞∆°i, sinh t·ªë, tr√†, c√† ph√™ v√† c√°c lo·∫°i bia, r∆∞·ª£u vang. üçπ",
    
    "khuy·∫øn m√£i" => "Hi·ªán t·∫°i ch√∫ng t√¥i c√≥ khuy·∫øn m√£i gi·∫£m 20,000ƒë cho m·ªçi h√≥a ƒë∆°n v√† gi·∫£m 5% cho h√≥a ƒë∆°n th√°ng 5. H·∫°n ƒë·∫øn ng√†y 31/05/2025. üéâ",
    "gi·∫£m gi√°" => "Hi·ªán t·∫°i ch√∫ng t√¥i c√≥ khuy·∫øn m√£i gi·∫£m 20,000ƒë cho m·ªçi h√≥a ƒë∆°n v√† gi·∫£m 5% cho h√≥a ƒë∆°n th√°ng 5. H·∫°n ƒë·∫øn ng√†y 31/05/2025. üéâ",
    "∆∞u ƒë√£i" => "Hi·ªán t·∫°i ch√∫ng t√¥i c√≥ khuy·∫øn m√£i gi·∫£m 20,000ƒë cho m·ªçi h√≥a ƒë∆°n v√† gi·∫£m 5% cho h√≥a ƒë∆°n th√°ng 5. H·∫°n ƒë·∫øn ng√†y 31/05/2025. üéâ",
    
    "combo" => "Combo 1 (450,000ƒë): Ph√π h·ª£p cho 4-6 ng∆∞·ªùi, g·ªìm c√°c m√≥n ƒë·∫∑c s·∫Øc truy·ªÅn th·ªëng. Combo 2 (250,000ƒë): Ph√π h·ª£p cho 1-2 ng∆∞·ªùi, l√† set th∆∞·ªüng th·ª©c mi·ªÅn T√¢y. üçΩÔ∏è",
    "set" => "Combo 1 (450,000ƒë): Ph√π h·ª£p cho 4-6 ng∆∞·ªùi, g·ªìm c√°c m√≥n ƒë·∫∑c s·∫Øc truy·ªÅn th·ªëng. Combo 2 (250,000ƒë): Ph√π h·ª£p cho 1-2 ng∆∞·ªùi, l√† set th∆∞·ªüng th·ª©c mi·ªÅn T√¢y. üçΩÔ∏è",
    
    "ƒë·∫∑t b√†n" => "Qu√Ω kh√°ch c√≥ th·ªÉ ƒë·∫∑t b√†n tr∆∞·ªõc qua s·ªë ƒëi·ªán tho·∫°i 0123456789 ho·∫∑c ƒë·∫∑t tr·ª±c ti·∫øp tr√™n website c·ªßa nh√† h√†ng. üìÖ",
    "ƒë·∫∑t ch·ªó" => "Qu√Ω kh√°ch c√≥ th·ªÉ ƒë·∫∑t b√†n tr∆∞·ªõc qua s·ªë ƒëi·ªán tho·∫°i 0123456789 ho·∫∑c ƒë·∫∑t tr·ª±c ti·∫øp tr√™n website c·ªßa nh√† h√†ng. üìÖ",
    "ƒë·∫∑t ti·ªác" => "Nh√† h√†ng nh·∫≠n ƒë·∫∑t ti·ªác sinh nh·∫≠t, h·ªçp m·∫∑t, li√™n hoan c√¥ng ty v·ªõi ∆∞u ƒë√£i ƒë·∫∑c bi·ªát. Vui l√≤ng li√™n h·ªá tr∆∞·ªõc 3-5 ng√†y. üéÇ",
    
    "thanh to√°n" => "Nh√† h√†ng ch·∫•p nh·∫≠n thanh to√°n b·∫±ng ti·ªÅn m·∫∑t, th·∫ª t√≠n d·ª•ng/ghi n·ª£, v√† c√°c v√≠ ƒëi·ªán t·ª≠ nh∆∞ Momo, ZaloPay, VNPay. üí≥",
    "ph∆∞∆°ng th·ª©c thanh to√°n" => "Nh√† h√†ng ch·∫•p nh·∫≠n thanh to√°n b·∫±ng ti·ªÅn m·∫∑t, th·∫ª t√≠n d·ª•ng/ghi n·ª£, v√† c√°c v√≠ ƒëi·ªán t·ª≠ nh∆∞ Momo, ZaloPay, VNPay. üí≥",
    
    "giao h√†ng" => "Nh√† h√†ng c√≥ d·ªãch v·ª• giao h√†ng trong ph·∫°m vi 5km v·ªõi ph√≠ 15,000ƒë. Mi·ªÖn ph√≠ giao h√†ng cho ƒë∆°n t·ª´ 500,000ƒë. üõµ",
    "ship" => "Nh√† h√†ng c√≥ d·ªãch v·ª• giao h√†ng trong ph·∫°m vi 5km v·ªõi ph√≠ 15,000ƒë. Mi·ªÖn ph√≠ giao h√†ng cho ƒë∆°n t·ª´ 500,000ƒë. üõµ",
    "th·ªùi gian giao h√†ng" => "Th·ªùi gian giao h√†ng th√¥ng th∆∞·ªùng t·ª´ 30-45 ph√∫t t√πy kho·∫£ng c√°ch. üïô",
    
    "wifi" => "Nh√† h√†ng c√≥ cung c·∫•p Wifi mi·ªÖn ph√≠ cho kh√°ch h√†ng. B·∫°n c√≥ th·ªÉ h·ªèi nh√¢n vi√™n ƒë·ªÉ bi·∫øt m·∫≠t kh·∫©u. üì∂",
    "b√£i ƒë·ªó xe" => "Nh√† h√†ng c√≥ b√£i ƒë·ªó xe √¥ t√¥ v√† xe m√°y mi·ªÖn ph√≠ cho kh√°ch h√†ng. üöó",
    "ch·ªó ƒë·∫≠u xe" => "Nh√† h√†ng c√≥ b√£i ƒë·ªó xe √¥ t√¥ v√† xe m√°y mi·ªÖn ph√≠ cho kh√°ch h√†ng. üöó",
    "xu·∫•t h√≥a ƒë∆°n" => "Nh√† h√†ng c√≥ th·ªÉ xu·∫•t h√≥a ƒë∆°n VAT theo y√™u c·∫ßu. Vui l√≤ng th√¥ng b√°o nh√¢n vi√™n tr∆∞·ªõc khi thanh to√°n. üìù",
    "ch·ªó ng·ªìi" => "Nh√† h√†ng c√≥ s·ª©c ch·ª©a kho·∫£ng 150 kh√°ch, g·ªìm c√°c khu v·ª±c trong nh√† m√°y l·∫°nh, khu s√¢n v∆∞·ªùn v√† ph√≤ng VIP ri√™ng t∆∞. ü™ë"
];

// Nh·∫≠n input
$data = json_decode(file_get_contents('php://input'), true);
$message = isset($data['message']) ? $data['message'] : '';

// M·∫∑c ƒë·ªãnh response
$response = "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ h·ªèi v·ªÅ gi·ªù m·ªü c·ª≠a, ƒë·ªãa ch·ªâ, m√≥n ƒÉn, khuy·∫øn m√£i, ƒë·∫∑t b√†n ho·∫∑c d·ªãch v·ª• giao h√†ng.";

if (!empty($message)) {
    // Chuy·ªÉn message v·ªÅ ch·ªØ th∆∞·ªùng
    $message = mb_strtolower($message, 'UTF-8');
    
    // T√¨m t·ª´ kh√≥a kh·ªõp v·ªõi c√¢u h·ªèi
    foreach ($fixed_responses as $keyword => $answer) {
        if (strpos($message, $keyword) !== false) {
            $response = $answer;
            break;
        }
    }
    
    // Th·ª≠ k·∫øt n·ªëi database n·∫øu c√≥ th·ªÉ
    try {
        if (file_exists('../config/config.php') && file_exists('../class/clsConnect.php')) {
            require_once '../config/config.php';
            require_once '../class/clsConnect.php';
            
            // Kh·ªüi t·∫°o session n·∫øu ch∆∞a c√≥
            if (session_status() === PHP_SESSION_NONE) {
                session_start();
            }
            
            // T·∫°o session_id n·∫øu ch∆∞a c√≥
            if (!isset($_SESSION['chat_session_id'])) {
                $_SESSION['chat_session_id'] = session_id();
            }
            
            $db = new connect_db();
            $conn = $db->getConnection();
            
            // L∆∞u tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng v√† bot
            if ($conn) {
                // L∆∞u tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
                $stmt = $conn->prepare("INSERT INTO chat_history (session_id, message, sender, created_at) VALUES (?, ?, 'user', NOW())");
                $stmt->bind_param("ss", $_SESSION['chat_session_id'], $message);
                $stmt->execute();
                
                // Ki·ªÉm tra xem c√≥ c√¢u tr·∫£ l·ªùi t·ª´ database kh√¥ng
                $stmt = $conn->prepare("SELECT answer FROM chatbot_qa WHERE question_pattern LIKE ?");
                $searchPattern = '%' . $message . '%';
                $stmt->bind_param("s", $searchPattern);
                $stmt->execute();
                $result = $stmt->get_result();
                
                if ($result->num_rows > 0) {
                    $row = $result->fetch_assoc();
                    
                    // N·∫øu c√¢u tr·∫£ l·ªùi l√† SQL query, th·ª±c thi query
                    if (stripos($row['answer'], 'SELECT') === 0) {
                        $query = $row['answer'];
                        $queryResult = $conn->query($query);
                        
                        if ($queryResult && $queryResult->num_rows > 0) {
                            $response = "<strong>K·∫øt qu·∫£ t√¨m ki·∫øm:</strong><br>";
                            while ($item = $queryResult->fetch_assoc()) {
                                // Format k·∫øt qu·∫£ t√πy thu·ªôc v√†o lo·∫°i d·ªØ li·ªáu
                                if (isset($item['name']) && isset($item['price'])) {
                                    // ƒê·ªãnh d·∫°ng cho m√≥n ƒÉn
                                    $response .= "- " . $item['name'] . ": " . number_format($item['price']) . "ƒë";
                                    if (isset($item['description'])) {
                                        $response .= " (" . $item['description'] . ")";
                                    }
                                    $response .= "<br>";
                                } else if (isset($item['SoBan']) && isset($item['TrangThai'])) {
                                    // ƒê·ªãnh d·∫°ng cho b√†n
                                    $response .= "- B√†n " . $item['SoBan'] . " (" . $item['soluongKH'] . " ng∆∞·ªùi): " . $item['TrangThai'] . "<br>";
                                } else if (isset($item['TenKM']) && isset($item['NoiDung'])) {
                                    // ƒê·ªãnh d·∫°ng cho khuy·∫øn m√£i
                                    $response .= "- " . $item['TenKM'] . ": " . $item['NoiDung'] . " (t·ª´ " . $item['NgayBD'] . " ƒë·∫øn " . $item['NgayKT'] . ")<br>";
                                } else {
                                    // ƒê·ªãnh d·∫°ng chung
                                    foreach ($item as $key => $value) {
                                        $response .= "- " . $key . ": " . $value . "<br>";
                                    }
                                }
                            }
                        }
                    } else {
                        // N·∫øu kh√¥ng ph·∫£i SQL query, s·ª≠ d·ª•ng c√¢u tr·∫£ l·ªùi tr·ª±c ti·∫øp
                        $response = $row['answer'];
                    }
                }
                
                // L∆∞u tin nh·∫Øn c·ªßa bot
                $stmt = $conn->prepare("INSERT INTO chat_history (session_id, message, sender, created_at) VALUES (?, ?, 'bot', NOW())");
                $stmt->bind_param("ss", $_SESSION['chat_session_id'], $response);
                $stmt->execute();
            }
        }
    } catch (Exception $e) {
        // B·ªè qua l·ªói khi t∆∞∆°ng t√°c v·ªõi database
        error_log("Database error: " . $e->getMessage());
    }
}

// Tr·∫£ v·ªÅ response
echo json_encode([
    'status' => 'success',
    'message' => $response
]); 